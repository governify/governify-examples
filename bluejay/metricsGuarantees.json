{
    "metrics": [
        {
            "name": "NUMBER_PIVOTAL_STARTED_STORIES",
            "description": "Returns the total number of Pivotal started stories for the period requested.",
            "dsl": {
                "NUMBER_PIVOTAL_STARTED_STORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "started"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_PIVOTAL_FINISHED_STORIES",
            "description": "Returns the total number of Pivotal finished stories for the period requested.",
            "dsl": {
                "NUMBER_PIVOTAL_FINISHED_STORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "finished"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_PIVOTAL_ACCEPTED_STORIES",
            "description": "Returns the total number of Pivotal accepted stories for the period requested.",
            "dsl": {
                "NUMBER_PIVOTAL_ACCEPTED_STORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "accepted"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_PIVOTAL_DELIVERED_STORIES",
            "description": "Returns the total number of Pivotal delivered stories for the period requested.",
            "dsl": {
                "NUMBER_PIVOTAL_DELIVERED_STORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "delivered"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_GITHUB_NEW_BRANCH",
            "description": "Returns the number of branches created on GitHub for the period requested.",
            "dsl": {
                "NUMBER_GITHUB_NEW_BRANCH": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "ghwrapper": {
                                "events": {
                                    "type": "CreateEvent",
                                    "payload": {
                                        "ref_type": "branch"
                                    }
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_GITHUB_OPEN_PR",
            "description": "Returns the number of open pull requests on GitHub for the period requested.",
            "dsl": {
                "NUMBER_GITHUB_OPEN_PR": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "github": {
                                "allPR": {}
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_GITHUB_MERGE_PR",
            "description": "Returns the number of open pull requests on GitHub for the period requested.",
            "dsl": {
                "NUMBER_GITHUB_MERGE_PR": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "github": {
                                "mergedPR": {
                                    "base": {
                                        "label": "%GITHUB.REPO_OWNER%:master"
                                    }
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_HEROKU_RELEASES",
            "description": "Returns the number of completed deployments on Heroku for the period requested.",
            "dsl": {
                "NUMBER_HEROKU_RELEASES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "heroku": {
                                "releases": {
                                    "status": "succeeded",
                                    "description": "%CONTAINS%Deploy"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_TRAVIS_BUILDS",
            "description": "Returns the total number of Travis builds for the period requested.",
            "dsl": {
                "NUMBER_TRAVIS_BUILDS": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "travis": {
                                "builds_public": {
                                    "@type": "build"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_TRAVIS_FAILED_BUILDS",
            "description": "Returns the total number of Travis builds that failed for the period requested.",
            "dsl": {
                "NUMBER_TRAVIS_FAILED_BUILDS": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "travis": {
                                "builds_public": {
                                    "@type": "build",
                                    "state": "failed"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_CC_COVERAGE",
            "description": "Returns the total number of CodeClimate reports with coverage higher or equal than 0 (all) for the period requested.",
            "dsl": {
                "NUMBER_CC_COVERAGE": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "codeclimate": {
                                "coverage": {
                                    "data": {
                                        "attributes": {
                                            "covered_percent": "%HIGHER_OR_EQUAL%0"
                                        }
                                    }
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "NUMBER_CC_COVERAGE_OVER_80",
            "description": "Returns the total number of CodeClimate reports with coverage higher than 80 for the period requested.",
            "dsl": {
                "NUMBER_CC_COVERAGE_OVER_80": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": "number",
                        "event": {
                            "codeclimate": {
                                "coverage": {
                                    "data": {
                                        "attributes": {
                                            "covered_percent": "%HIGHER%80"
                                        }
                                    }
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_NEWBRANCH_STARTEDSTORIES",
            "description": "Returns the percentage obtained dividing the number of branches created on Github by the number of started stories on Pivotal for the requested period.",
            "dsl": {
                "PERCENTAGE_NEWBRANCH_STARTEDSTORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "github": {
                                        "events": {
                                            "type": "CreateEvent",
                                            "payload": {
                                                "ref_type": "branch"
                                            }
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "started"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_NEWBRANCHWR_STARTEDSTORIES",
            "description": "Returns the percentage obtained dividing the number of branches created on Github (obtained by the GitHub Wrapper) by the number of started stories on Pivotal for the requested period.",
            "dsl": {
                "PERCENTAGE_NEWBRANCHWR_STARTEDSTORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "ghwrapper": {
                                        "events": {
                                            "type": "CreateEvent",
                                            "payload": {
                                                "ref_type": "branch"
                                            }
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "started"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_NEWBRANCH_STARTEDSTORIES_BIND",
            "description": "Returns the percentage obtained dividing the number of branches created on Github by the number of started stories on Pivotal that are correlated with the binding parameter for the requested period.",
            "dsl": {
                "PERCENTAGE_NEWBRANCH_STARTEDSTORIES_BIND": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "github": {
                                        "events": {
                                            "type": "CreateEvent",
                                            "payload": {
                                                "ref": "#CONTAINS(changes.0.id)#",
                                                "ref_type": "branch"
                                            }
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "started"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_OPENPR_FINISHEDSTORIES",
            "description": "Returns the percentage obtained dividing the number of pull requests opened on Github by the number of finished stories on Pivotal for the requested period.",
            "dsl": {
                "PERCENTAGE_OPENPR_FINISHEDSTORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "github": {
                                        "allPR": {}
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "finished"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_OPENPR_FINISHEDSTORIES_BIND",
            "description": "Returns the percentage obtained dividing the number of pull requests opened on Github by the number of finished stories on Pivotal that are correlated with the binding parameter for the requested period.",
            "dsl": {
                "PERCENTAGE_OPENPR_FINISHEDSTORIES_BIND": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "github": {
                                        "allPR": {
                                            "head": {
                                                "ref": "#CONTAINS(changes.0.id)#"
                                            }
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "finished"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_MERGEPR_DELIVEREDSTORIES",
            "description": "Returns the percentage obtained dividing the number of merged pull requests on Github by the number of delivered stories on Pivotal for the requested period.",
            "dsl": {
                "PERCENTAGE_MERGEPR_DELIVEREDSTORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "github": {
                                        "mergedPR": {
                                            "base": {
                                                "label": "%GITHUB.REPO_OWNER%:master"
                                            }
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "delivered"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_MERGEPR_DELIVEREDSTORIES_BIND",
            "description": "Returns the percentage obtained dividing the number of merged pull requests on Github by the number of delivered stories on Pivotal that are correlated with the binding parameter for the requested period.",
            "dsl": {
                "PERCENTAGE_MERGEPR_DELIVEREDSTORIES_BIND": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "github": {
                                        "mergedPR": {
                                            "head": {
                                                "ref": "#CONTAINS(changes.0.id)#"
                                            }
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "delivered"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_RELEASES_DELIVEREDSTORIES",
            "description": "Returns the percentage obtained dividing the number of Heroku deployments by the number of delivered stories on Pivotal that are correlated within a really small period of time for the requested period.",
            "dsl": {
                "PERCENTAGE_RELEASES_DELIVEREDSTORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "heroku": {
                                        "releases": {
                                            "status": "succeeded",
                                            "description": "%CONTAINS%Deploy"
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "delivered"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_RELEASES_DELIVEREDSTORIES_BIND",
            "description": "Returns the percentage obtained dividing the number of Heroku deployments by the number of delivered stories on Pivotal that are correlated within a really small period of time for the requested period.",
            "dsl": {
                "PERCENTAGE_RELEASES_DELIVEREDSTORIES": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "heroku": {
                                        "releases": {
                                            "status": "succeeded",
                                            "description": "%CONTAINS%Deploy"
                                        }
                                    },
                                    "window": 1440
                                }
                            }
                        },
                        "event": {
                            "pivotal": {
                                "activity": {
                                    "highlight": "delivered"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_FAILEDBUILDS_BUILDS",
            "description": "Returns the percentage obtained dividing the number of Travis failed builds by the number of total Travis builds for the requested period.",
            "dsl": {
                "PERCENTAGE_FAILEDBUILDS_BUILDS": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "travis": {
                                        "builds_public": {
                                            "@type": "build",
                                            "state": "failed"
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "travis": {
                                "builds_public": {
                                    "@type": "build"
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "PERCENTAGE_80COVERAGE_COVERAGE",
            "description": "Returns the percentage obtained dividing the number of higher than 80% coverage reports on CodeClimate by the number of total CodeClimate reports for the requested period.",
            "dsl": {
                "PERCENTAGE_80COVERAGE_COVERAGE": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "percentage": {
                                "related": {
                                    "codeclimate": {
                                        "coverage": {
                                            "data": {
                                                "attributes": {
                                                    "covered_percent": "%HIGHER%80"
                                                }
                                            }
                                        }
                                    },
                                    "window": 86400
                                }
                            }
                        },
                        "event": {
                            "codeclimate": {
                                "coverage": {
                                    "data": {
                                        "attributes": {
                                            "covered_percent": "%HIGHER_OR_EQUAL%0"
                                        }
                                    }
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "VALUE_CC_COVERAGE",
            "description": "Returns the newest value of coverage from CodeClimate for the requested period.",
            "dsl": {
                "VALUE_CC_COVERAGE": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "value": {
                                "parameter": "attributes.covered_percent",
                                "return": "newest",
                                "traceback": true
                            }
                        },
                        "event": {
                            "codeclimate": {
                                "coverage": {	
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        }
                    }
                }
            }
        },
        {
            "name": "VALUE_OFFSET_CC_COVERAGE",
            "description": "Returns the newest value of coverage from CodeClimate for the requested period offseted by 1 day.",
            "dsl": {
                "VALUE_OFFSET_CC_COVERAGE": {
                    "computer": {
                        "$ref": "#/context/definitions/computers/eventcomputer"
                    },
                    "measure": {
                        "computing": "actual",
                        "element": {
                            "value": {
                                "parameter": "attributes.covered_percent",
                                "return": "newest",
                                "traceback": true
                            }
                        },
                        "event": {
                            "codeclimate": {
                                "coverage": {	
                                }
                            }
                        },
                        "scope": {
                            "$ref": "#/context/definitions/scopes/development"
                        },
                        "offset": -1
                    }
                }
            }
        }
    ],
    "guarantees": [
        {
            "id": "75_PERCENT_NEWBRANCH_STARTED_STORIES_WITHIN_A_DAY_WRAPPER",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of started stories(PT) must match a creation of a branch (GH) within a day.",
            "description": "At least 75% of started stories must match a creation of a branch within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_NEWBRANCHWR_STARTEDSTORIES >= 75",
                    "with": {
                        "PERCENTAGE_NEWBRANCHWR_STARTEDSTORIES": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "75_PERCENT_NEWBRANCH_STARTED_STORIES_WITHIN_A_DAY",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of started stories(PT) must match a creation of a branch (GH) within a day.",
            "description": "At least 75% of started stories must match a creation of a branch within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_NEWBRANCH_STARTEDSTORIES >= 75",
                    "with": {
                        "PERCENTAGE_NEWBRANCH_STARTEDSTORIES": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "75_PERCENT_NEWBRANCH_STARTED_STORIES_WITHIN_A_DAY_BIND",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of started stories(PT) must match a creation of a branch (GH) within a day.",
            "description": "At least 75% of started stories must match a creation of a branch within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_NEWBRANCH_STARTEDSTORIES_BIND >= 75",
                    "with": {
                        "PERCENTAGE_NEWBRANCH_STARTEDSTORIES_BIND": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "75_PERCENT_MASTER_PR_OPEN_FINSH_STORIES_WITHIN_A_DAY",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of finished stories(PT) must match creation of a PR within a day.",
            "description": "At least 75% of finished stories must match the creation of a PR within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_OPENPR_FINISHEDSTORIES >= 75",
                    "with": {
                        "PERCENTAGE_OPENPR_FINISHEDSTORIES": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "75_PERCENT_MASTER_PR_OPEN_FINSH_STORIES_WITHIN_A_DAY_BIND",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of finished stories(PT) must match creation of a PR within a day.",
            "description": "At least 75% of finished stories must match the creation of a PR within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_OPENPR_FINISHEDSTORIES_BIND >= 75",
                    "with": {
                        "PERCENTAGE_OPENPR_FINISHEDSTORIES_BIND": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "75_PERCENT_MASTER_PR_MERGE_DELVR_STORIES_WITHIN_A_DAY",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of delivered stories(PT) must match a the merge of a PR into master within a day.",
            "description": "At least 75% of delivered stories must match the merge of a PR into master within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_MERGEPR_DELIVEREDSTORIES >= 75",
                    "with": {
                        "PERCENTAGE_MERGEPR_DELIVEREDSTORIES": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "75_PERCENT_MASTER_PR_MERGE_DELVR_STORIES_WITHIN_A_DAY_BIND",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of delivered stories(PT) must match a the merge of a PR into master within a day.",
            "description": "At least 75% of delivered stories must match the merge of a PR into master within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_MERGEPR_DELIVEREDSTORIES_BIND >= 75",
                    "with": {
                        "PERCENTAGE_MERGEPR_DELIVEREDSTORIES_BIND": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "75_PERCENT_MASTER_PR_MERGE_DEPLOY_WITHIN_A_DAY",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of delivered stories(PT) must match a the merge of a PR into master within a day.",
            "description": "At least 75% of delivered stories must match the merge of a PR into master within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_RELEASES_DELIVEREDSTORIES >= 75",
                    "with": {
                        "PERCENTAGE_RELEASES_DELIVEREDSTORIES": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "75_PERCENT_MASTER_PR_MERGE_DEPLOY_WITHIN_A_DAY_BIND",
            "notes": "#### Description\r\n```\r\nTP-1: At least 75% of delivered stories(PT) must match a the merge of a PR into master within a day.",
            "description": "At least 75% of delivered stories must match the merge of a PR into master within a day.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "PERCENTAGE_RELEASES_DELIVEREDSTORIES_BIND >= 75",
                    "with": {
                        "PERCENTAGE_RELEASES_DELIVEREDSTORIES_BIND": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        },
        {
            "id": "COVERAGE_DELTA_VARIATION_HIGHER_EQUAL_ZERO",
            "notes": "#### Description\r\n```\r\n: The delta variation of the coverage must be higher than 0.",
            "description": "This returns the delta variation of the coverage. The points values should be greater than 0.",
            "scope": {
                "$ref": "#/context/definitions/scopes/development"
            },
            "of": [
                {
                    "scope": {
                        "project": "1010101010"
                    },
                    "objective": "VALUE_CC_COVERAGE - VALUE_OFFSET_CC_COVERAGE >= 0",
                    "with": {
                        "VALUE_CC_COVERAGE": {},
                        "VALUE_OFFSET_CC_COVERAGE": {}
                    },
                    "window": {
                        "type": "static",
                        "period": "daily",
                        "initial": "2018-01-01"
                    }
                }
            ]
        }
    ]
}